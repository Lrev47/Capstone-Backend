// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// how should a schema look if I want the user to sign in, 

// then be able to delete, add to cart, 
// purchase, and finally Their purchased items. 

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//users
//products
//order
//orderItem
model Users {
  id              Int     @id @default(autoincrement())
  firstName       String
  lastName        String
  address         String
  city            String
  state           String
  zipcode         String
  username        String  @unique
  password        String
  phone           String?
  email           String  @unique
  moneyNum        Float
  userImageUrl    String
  favoriteProduct String
  Order           Order[]
}

model Products {
  id          Int     @id @default(autoincrement())
  name        String
  category    String
  price       Float
  inStock     Boolean
  quantity    Int
  imageUrl    String
  rating      Float
  description String

  OrderItem OrderItem[]
}

model Order {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  status     String      @default("pending")
  total      Float       @default(0)
  quantity   Int         @default(0) //this needs to be deleted
  user       Users       @relation(fields: [userId], references: [id])
  userId     Int
  orderItems OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  price     Float
  product   Products @relation(fields: [productId], references: [id])
  productId Int
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
}
